{"version":3,"sources":["context/ThemeContext.js","components/address/AddressComponent.js","components/search/SearchComponent.js","containers/autocomplete/AutoCompleteContainer.js","containers/home/HomeContainer.js","components/privacy-policy/PrivacyPolicyComponent.js","components/icon/IconComponent.js","components/header/HeaderComponent.js","components/footer/FooterComponent.js","App.js","serviceWorker.js","index.js","components/loader/LoaderComponent.js","context/AddressContext.js","components/error/ErrorComponent.js","context/WeatherUnitContext.js","containers/error-boundary/ErrorBoundaryContainer.js"],"names":["ThemeContext","React","createContext","theme","toggleTheme","ThemeContextProvider","children","useState","setTheme","colorTheme","saveThemePreference","localStorage","setItem","JSON","stringify","useEffect","getItem","parse","hour","moment","format","daynightChecker","Provider","value","selectedTheme","AddressComponent","props","useContext","className","onClick","addressSelected","address","cityName","SearchComponent","src","alt","style","backgroundColor","id","type","placeholder","onChange","citySearch","city","showCaret","trim","caretClicked","showAddresses","axiosRetry","axios","retryDelay","exponentialDelay","AutoCompleteContainer","state","showLoader","addresses","errorMessage","debounceAddress","debounce","getAddresses","searchCity","event","setState","target","clearState","toggleAddresses","prevState","setCity","getLatLong","message","this","get","data","isEmpty","isUndefined","count","handleError","results","_embedded","map","result","matching_full_name","cityId","_links","href","split","lat","long","name","slug","photos","location","latlon","latitude","longitude","undefined","urbanAreas","Object","keys","includes","context","updateState","latlong","urbanArea","LoaderComponent","index","key","length","ErrorComponent","showCloseBtn","closeError","Component","contextType","AddressContext","WeatherContainer","lazy","FavoritesContainer","HomeContainer","WeatherUnitContext","ErrorBoundaryContainer","fallback","loaderText","PrivacyPolicyComponent","rel","data-content","IconComponent","iconType","HeaderComponent","to","checked","icons","unchecked","FooterComponent","title","role","aria-label","App","path","exact","component","Boolean","window","hostname","match","basename","process","test","xmlns","viewBox","d","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","AddressContextProvider","updateFavorites","favorites","fetchAddressInfo","a","async","region","country_name","getFavorites","response","urban_areas","console","log","getAddressInfo","propTypes","PropTypes","objectOf","string","weatherUnit","WeatherUnitContextProvider","setWeatherUnit","updateWeatherUnit","unit","hasError","error","errorInfo"],"mappings":"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","file":"static/js/main.3d89c061.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport moment from 'moment-timezone'\r\n\r\nconst ThemeContext = React.createContext({\r\n  theme: 'light',\r\n  toggleTheme: () => {}\r\n})\r\n\r\nconst ThemeContextProvider = ({children}) => {\r\n  const [theme, setTheme] = useState('')\r\n  const colorTheme = theme === 'light' ? 'dark' : 'light'\r\n\r\n  const toggleTheme = () => {\r\n    const selectedTheme = theme === 'light' ? 'dark' : 'light'\r\n    setTheme(selectedTheme)\r\n    saveThemePreference(selectedTheme)\r\n  }\r\n\r\n  const saveThemePreference = theme => {\r\n    localStorage.setItem('theme', JSON.stringify(theme))\r\n  }\r\n\r\n  const daynightChecker = () => {\r\n    const hour = moment().format('H')\r\n    if (hour >= 6 && hour < 18) {\r\n      setTheme('light')\r\n      saveThemePreference('light')\r\n    } else {\r\n      setTheme('dark')\r\n      saveThemePreference('dark')\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // set theme based on the time on initial application load and\r\n    // when there is no theme preference in the localStorage\r\n    if (!localStorage.getItem('theme')) {\r\n      daynightChecker()\r\n    } else {\r\n      setTheme(JSON.parse(localStorage.getItem('theme')))\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{theme, colorTheme, toggleTheme}}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nexport {ThemeContext, ThemeContextProvider}\r\n","import React, {useContext} from 'react'\r\nimport {ThemeContext} from '../../context/ThemeContext'\r\nimport {PropTypes} from 'prop-types'\r\n\r\nconst AddressComponent = props => {\r\n  const {theme, colorTheme} = useContext(ThemeContext)\r\n  return (\r\n    <p\r\n      className={`px-5 py-1 cursor-pointer item text-${colorTheme} hover:text-${theme} hover:bg-${colorTheme}`}\r\n      onClick={props.addressSelected}>\r\n      {props.address.cityName}\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default AddressComponent\r\n\r\nAddressComponent.propTypes = {\r\n  addressSelected: PropTypes.func,\r\n  address: PropTypes.objectOf(PropTypes.string)\r\n}\r\n","import React, {useContext} from 'react'\r\nimport {ThemeContext} from '../../context/ThemeContext'\r\nimport {PropTypes} from 'prop-types'\r\n\r\nconst SearchComponent = props => {\r\n  const {theme, colorTheme} = useContext(ThemeContext)\r\n  return (\r\n    <div className='h-12 mx-5 mt-5'>\r\n      <div className='relative'>\r\n        <div className='absolute top-0 left-0 ml-4 mt-4'>\r\n          <img\r\n            src='./city-weather-search.svg'\r\n            alt='city search'\r\n            className='h-6 object-contain object-center'\r\n          />\r\n        </div>\r\n        <input\r\n          style={{\r\n            backgroundColor: `${theme === 'dark' ? '#3a3a3a' : '#e2e8f0'}`\r\n          }}\r\n          className={`block appearance-none w-full border-none rounded-full shadow py-3 pl-12 pr-4 mb-3 leading-tight focus:outline-none focus:bg-gray-200 truncate text-${colorTheme}`}\r\n          id='grid-first-name'\r\n          type='text'\r\n          placeholder='Type city name to find weather forecast'\r\n          onChange={props.citySearch}\r\n          value={props.city}\r\n        />\r\n        {props.showCaret && props.city.trim() ? (\r\n          <div\r\n            className='flex right-0 absolute top-0 mr-4 mt-4 cursor-pointer'\r\n            onClick={props.caretClicked}>\r\n            {props.showAddresses ? (\r\n              <img\r\n                src='./up-arrow.svg'\r\n                alt='arrow-up'\r\n                className='h-4 object-contain object-center'\r\n              />\r\n            ) : (\r\n              <img\r\n                src='./down-arrow.svg'\r\n                alt='arrow-down'\r\n                className='h-4 object-contain object-center'\r\n              />\r\n            )}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchComponent\r\n\r\nSearchComponent.propTypes = {\r\n  city: PropTypes.string,\r\n  cityName: PropTypes.string,\r\n  showCaret: PropTypes.bool,\r\n  showAddresses: PropTypes.bool,\r\n  caretClicked: PropTypes.func\r\n}\r\n","import React, {Component, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport axiosRetry from 'axios-retry'\r\nimport debounce from 'lodash/debounce'\r\nimport './AutoCompleteStyle.scss'\r\nimport AddressComponent from '../../components/address/AddressComponent'\r\nimport LoaderComponent from '../../components/loader/LoaderComponent'\r\nimport ErrorComponent from '../../components/error/ErrorComponent'\r\nimport {AddressContext} from '../../context/AddressContext'\r\nimport SearchComponent from '../../components/search/SearchComponent'\r\nimport {isEmpty, isUndefined} from 'lodash-es'\r\n\r\n// Exponential back-off retry delay between requests\r\naxiosRetry(axios, {retryDelay: axiosRetry.exponentialDelay})\r\n\r\nclass AutoCompleteContainer extends Component {\r\n  static contextType = AddressContext\r\n  state = {\r\n    showCaret: false,\r\n    showAddresses: false,\r\n    showLoader: false,\r\n    city: '',\r\n    addresses: [],\r\n    errorMessage: ''\r\n  }\r\n\r\n  handleError(message) {\r\n    this.setState({errorMessage: message})\r\n  }\r\n\r\n  // debounced function\r\n  debounceAddress = debounce(this.getAddresses, 1000)\r\n\r\n  searchCity = event => {\r\n    this.setState({city: event.target.value})\r\n    if (event.target.value.trim()) {\r\n      this.setState({errorMessage: ''})\r\n      this.debounceAddress()\r\n    } else {\r\n      this.clearState()\r\n    }\r\n  }\r\n\r\n  // fetch valid matched addresses for searched city\r\n  async getAddresses() {\r\n    try {\r\n      this.setState({showLoader: true})\r\n      const {data} = await axios.get(\r\n        `https://api.teleport.org/api/cities/?search=${this.state.city}`\r\n      )\r\n\r\n      // if matching cities exist\r\n      if (!isEmpty(data) && !isUndefined(data) && data.count) {\r\n        const results = data._embedded['city:search-results'].map(result => ({\r\n          cityName: result.matching_full_name,\r\n          cityId: result._links['city:item'].href.split('/')[5]\r\n        }))\r\n        // results is an array of `address` objects with cityName and cityId properties\r\n        this.setState({\r\n          addresses: results,\r\n          showCaret: true,\r\n          showAddresses: true,\r\n          errorMessage: ''\r\n        })\r\n      } else {\r\n        this.setState({showAddresses: false})\r\n        this.handleError(\r\n          'No matching cities found. Try searching with a valid city name!'\r\n        )\r\n      }\r\n    } catch (error) {\r\n      this.handleError(error)\r\n    } finally {\r\n      this.setState({showLoader: false})\r\n    }\r\n  }\r\n\r\n  toggleAddresses = () => {\r\n    this.setState((prevState, props) => {\r\n      return {\r\n        showAddresses: !prevState.showAddresses\r\n      }\r\n    })\r\n  }\r\n\r\n  setCity = address => {\r\n    if (address) {\r\n      this.setState({\r\n        city: address.cityName,\r\n        showAddresses: false\r\n      })\r\n      this.getLatLong(address)\r\n    }\r\n  }\r\n\r\n  async getLatLong(address) {\r\n    // defaults\r\n    let lat = ''\r\n    let long = ''\r\n    let name = ''\r\n    let slug = ''\r\n    let photos = []\r\n\r\n    // get lat, long, and name\r\n    const {data} = await axios.get(\r\n      `https://api.teleport.org/api/cities/${address.cityId}`\r\n    )\r\n\r\n    if (!isEmpty(data) && !isUndefined(data)) {\r\n      const {latitude, longitude} = data.location.latlon\r\n      lat = latitude\r\n      long = longitude\r\n      if (data._links['city:urban_area']) {\r\n        name = data._links['city:urban_area'].name\r\n      }\r\n    }\r\n\r\n    // get slug and photos\r\n    if (localStorage.getItem('urban-areas') && name !== undefined) {\r\n      const urbanAreas = JSON.parse(localStorage.getItem('urban-areas'))\r\n      if (Object.keys(urbanAreas).includes(name)) {\r\n        slug = urbanAreas[name]\r\n        const {data} = await axios.get(\r\n          `https://api.teleport.org/api/urban_areas/slug:${slug}/images`\r\n        )\r\n        photos = !isEmpty(data) && !isUndefined(data) ? data.photos : []\r\n      }\r\n    }\r\n\r\n    this.context.updateState({\r\n      address: address,\r\n      latlong: `${lat},${long}`,\r\n      urbanArea: {\r\n        name,\r\n        slug,\r\n        photos\r\n      }\r\n    })\r\n  }\r\n\r\n  clearState() {\r\n    this.setState({\r\n      showCaret: false,\r\n      showAddresses: false,\r\n      showLoader: false,\r\n      addresses: [],\r\n      errorMessage: ''\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className='flex justify-center mt-5'>\r\n          <div className='w-full sm:w-5/6 md:w-2/3 xl:w-1/2'>\r\n            <SearchComponent\r\n              city={this.state.city}\r\n              showCaret={this.state.showCaret}\r\n              showAddresses={this.state.showAddresses}\r\n              citySearch={this.searchCity}\r\n              caretClicked={this.toggleAddresses}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='flex justify-center'>\r\n          <div className='w-full sm:w-5/6 md:w-2/3 xl:w-1/2'>\r\n            {this.state.showLoader ? (\r\n              <LoaderComponent />\r\n            ) : (\r\n              this.state.showAddresses && (\r\n                <div className='mx-10 mt-0 border-solid border-2 border-gray-400 rounded-b-xl address-list'>\r\n                  {this.state.addresses.map((address, index) => {\r\n                    return (\r\n                      <AddressComponent\r\n                        address={address}\r\n                        key={index}\r\n                        addressSelected={() => this.setCity(address)}\r\n                      />\r\n                    )\r\n                  })}\r\n                </div>\r\n              )\r\n            )}\r\n            {this.state.errorMessage.length > 0 && (\r\n              <ErrorComponent\r\n                errorMessage={this.state.errorMessage}\r\n                showCloseBtn={true}\r\n                closeError={() => {\r\n                  this.setState({errorMessage: ''})\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AutoCompleteContainer\r\n","import React, {Component, Suspense, lazy, Fragment} from 'react'\r\nimport AutoCompleteContainer from '../autocomplete/AutoCompleteContainer'\r\nimport LoaderComponent from '../../components/loader/LoaderComponent'\r\nimport {AddressContextProvider} from '../../context/AddressContext'\r\nimport {WeatherUnitContextProvider} from '../../context/WeatherUnitContext'\r\nimport {ThemeContext} from '../../context/ThemeContext'\r\nimport ErrorBoundaryContainer from '../error-boundary/ErrorBoundaryContainer'\r\nconst WeatherContainer = lazy(() => import('./../weather/WeatherContainer'))\r\nconst FavoritesContainer = lazy(() => import('../favorites/FavoritesContainer'))\r\n\r\nexport class HomeContainer extends Component {\r\n  static contextType = ThemeContext\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <WeatherUnitContextProvider>\r\n          <AddressContextProvider>\r\n            <AutoCompleteContainer />\r\n            <ErrorBoundaryContainer>\r\n              <Suspense\r\n                fallback={\r\n                  <LoaderComponent loaderText={'Loading components'} />\r\n                }>\r\n                <WeatherContainer />\r\n                <FavoritesContainer />\r\n              </Suspense>\r\n            </ErrorBoundaryContainer>\r\n          </AddressContextProvider>\r\n        </WeatherUnitContextProvider>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HomeContainer\r\n","import React, {useContext} from 'react'\r\nimport {ThemeContext} from '../../context/ThemeContext'\r\n\r\nconst PrivacyPolicyComponent = () => {\r\n  const {colorTheme} = useContext(ThemeContext)\r\n  return (\r\n    <div className='flex justify-center'>\r\n      <div\r\n        className={`text-${colorTheme} p-2 sm:p-5 max-w-xs sm:max-w-2xl lg:max-w-4xl xl:max-w-6xl`}>\r\n        <h2 className='font-bold text-center'>Privacy Policy</h2>\r\n        <div className='py-2 break-words text-sm tracking-wider'>\r\n          <p>\r\n            This privacy policy has been compiled to better serve those who are\r\n            concerned with how their 'Personally Identifiable Information' (PII)\r\n            is being used online. PII, as described in US privacy law and\r\n            information security, is information that can be used on its own or\r\n            with other information to identify, contact, or locate a single\r\n            person, or to identify an individual in context. Please read this\r\n            privacy policy carefully to get a clear understanding of how I\r\n            collect, use, protect or otherwise handle your Personally\r\n            Identifiable Information in accordance with\r\n            https://iamsainikhil.github.io/weather-react (the “Site”).\r\n          </p>\r\n          <br />\r\n\r\n          <h4 className='py-1 font-bold'>PERSONAL INFORMATION I COLLECT</h4>\r\n          <p>\r\n            When you visit the Site, I automatically collect certain information\r\n            about your device, including information about your web browser, IP\r\n            address, time zone, and some of the cookies that are installed on\r\n            your device. Additionally, as you browse the Site, I collect\r\n            information about the individual web pages or products that you\r\n            view, what websites or search terms referred you to the Site, and\r\n            information about how you interact with the Site. I refer to this\r\n            automatically-collected information as “Device Information.”\r\n          </p>\r\n\r\n          <h5 className='py-1'>\r\n            I collect Device Information using the following technologies:\r\n          </h5>\r\n          <ul className='list-disc pl-6'>\r\n            <li>\r\n              “Cookies” are data files that are placed on your device or\r\n              computer and often include an anonymous unique identifier. For\r\n              more information about cookies, and how to disable cookies, visit\r\n              <a\r\n                href='http://www.allaboutcookies.org'\r\n                target='_blank'\r\n                rel='noopener noreferrer'>\r\n                http://www.allaboutcookies.org\r\n              </a>\r\n              .\r\n            </li>\r\n            <li>\r\n              “Log files” track actions occurring on the Site, and collect data\r\n              including your IP address, browser type, Internet service\r\n              provider, referring/exit pages, and date/time stamps.\r\n            </li>\r\n          </ul>\r\n\r\n          <h5 className='py-1'>I use cookies to:</h5>\r\n          <ul className='list-disc pl-6'>\r\n            <li>\r\n              Compile aggregate data about site traffic and site interactions in\r\n              order to offer better site experiences and tools in the future. I\r\n              may also use trusted third-party services that track this\r\n              information on my behalf.\r\n            </li>\r\n            <li>\r\n              You can choose to have your computer warn you each time a cookie\r\n              is being sent, or you can choose to turn off all cookies. You do\r\n              this through your browser settings. Since browser is a little\r\n              different, look at your browser's Help Menu to learn the correct\r\n              way to modify your cookies\r\n            </li>\r\n            <li>\r\n              If you turn cookies off, It won't affect the user's experience .\r\n            </li>\r\n          </ul>\r\n          <br />\r\n          <h4 className='py-1 font-bold'>\r\n            HOW DO I USE YOUR PERSONAL INFORMATION?\r\n          </h4>\r\n          <p>\r\n            I use the Device Information that I collect to help me screen for\r\n            potential risk and fraud (in particular, your IP address), and more\r\n            generally to improve and optimize my Site (for example, by\r\n            generating analytics about how my customers browse and interact with\r\n            the Site).\r\n          </p>\r\n          <br />\r\n          <h4 className='py-1 font-bold'>SHARING YOUR PERSONAL INFORMATION</h4>\r\n          <p>\r\n            I use Yandex.Metrica to help me understand how my users use the\r\n            Site. You can read more about how Yandex uses your Personal\r\n            Information here:&nbsp;\r\n            <a\r\n              href='https://yandex.com/legal/confidential/'\r\n              target='_blank'\r\n              rel='noopener noreferrer'\r\n              className='special-link z-0'>\r\n              https://yandex.com/legal/confidential/\r\n            </a>\r\n            . You can also opt-out of Yandex.Metrica here:&nbsp;\r\n            <a\r\n              href='https://yandex.com/support/metrica/general/opt-out.html'\r\n              target='_blank'\r\n              rel='noopener noreferrer'\r\n              className='special-link z-0'>\r\n              https://yandex.com/support/metrica/general/opt-out.html\r\n            </a>\r\n            .\r\n          </p>\r\n          <br />\r\n\r\n          <h4 className='py-1 font-bold'>HOW DO I PROTECT YOUR INFORMATION?</h4>\r\n          <p>\r\n            My website is scanned on a regular basis for security issues and\r\n            known vulnerabilities in order to make your visit to my site as safe\r\n            as possible.\r\n          </p>\r\n          <p>\r\n            Your personal information is contained behind secured networks and\r\n            is only accessible by a limited number of persons who have special\r\n            access rights to such systems, and are required to keep the\r\n            information confidential.\r\n          </p>\r\n          <p>\r\n            In addition, all sensitive information you supply is encrypted via\r\n            Secure Socket Layer (SSL) technology. I implement a variety of\r\n            security measures when a user enters, submits, or accesses their\r\n            information to maintain the safety of your personalinformation.\r\n          </p>\r\n          <br />\r\n          <h4 className='py-1 font-bold'>DO NOT TRACK</h4>\r\n          <p>\r\n            Please note that I do not alter my Site’s data collection and use\r\n            practices when I see a Do Not Track signal from your browser.\r\n          </p>\r\n          <br />\r\n          <h4 className='py-1 font-bold'>DATA RETENTION</h4>\r\n          <p>\r\n            The data I collection through google analytics will be stored for a\r\n            maximum of 24 months and any comments data will be stored forever.\r\n            However, your data is strictly secured and can only be accessed by\r\n            me.\r\n          </p>\r\n          <br />\r\n          <h4 className='py-1 font-bold'>CHANGES</h4>\r\n          <p>\r\n            I may update this privacy policy from time to time in order to\r\n            reflect, for example, changes to my practices or for other\r\n            operational, legal or regulatory reasons.\r\n          </p>\r\n\r\n          <div className='divider text-center' data-content='OR'></div>\r\n          <p>\r\n            For more information about my privacy practices, if you have\r\n            questions, or if you would like to make a complaint, please contact\r\n            me by e-mail at&nbsp;\r\n            <a\r\n              href='mailto:contact@iamsainikhil.com'\r\n              target='_blank'\r\n              rel='noopener noreferrer'\r\n              className='special-link z-0'>\r\n              contact@iamsainikhil.com\r\n            </a>\r\n          </p>\r\n          <br />\r\n          <p>This policy is effective as of March 1st, 2020.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PrivacyPolicyComponent\r\n","import React from 'react'\r\nimport {PropTypes} from 'prop-types'\r\n\r\nconst IconComponent = ({iconType}) => {\r\n  return (\r\n    <div>\r\n      {iconType === 'light' ? (\r\n        <img src='./sun.svg' alt='Light' />\r\n      ) : (\r\n        <img src='./moon.svg' alt='Dark' />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default IconComponent\r\n\r\nIconComponent.propTypes = {\r\n  iconType: PropTypes.string\r\n}\r\n","import React, {useContext} from 'react'\r\nimport Toggle from 'react-toggle'\r\nimport './ReactToggle.scss'\r\nimport {ThemeContext} from '../../context/ThemeContext'\r\nimport IconComponent from '../icon/IconComponent'\r\nimport {Link} from 'react-router-dom'\r\nimport {isEmpty} from 'lodash-es'\r\n\r\nconst HeaderComponent = () => {\r\n  const {theme, toggleTheme} = useContext(ThemeContext)\r\n\r\n  return (\r\n    <div className='flex justify-between items-center px-5 py-5'>\r\n      <div>\r\n        <Link to='/'>\r\n          <img\r\n            src='./logo.png'\r\n            alt='Logo'\r\n            className='h-12 w-12 object-contain object-center cursor-pointer'\r\n          />\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        {/* below condition to avoid toggle glitch effect on page refresh */}\r\n        {!isEmpty(theme) ? (\r\n          <Toggle\r\n            checked={theme === 'light'}\r\n            icons={{\r\n              checked: <IconComponent iconType={'light'} />,\r\n              unchecked: <IconComponent iconType={'dark'} />\r\n            }}\r\n            onChange={toggleTheme}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HeaderComponent\r\n","import React, {useContext} from 'react'\r\nimport {ThemeContext} from '../../context/ThemeContext'\r\nimport moment from 'moment-timezone'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst FooterComponent = () => {\r\n  const {theme, colorTheme} = useContext(ThemeContext)\r\n  return (\r\n    <div className={`text-${colorTheme} pb-3`}>\r\n      <div\r\n        className={`flex flex-col text-center sm:flex sm:flex-row justify-around p-5 text-${colorTheme} text-sm`}>\r\n        <p className='my-2 sm:my-0 w-full sm:w-1/3'>\r\n          <a\r\n            href='https://github.com/iamsainikhil/weather-react/'\r\n            target='_blank'\r\n            rel='noreferrer noopener'\r\n            className={`special-link z-0 hover:text-${theme}`}>\r\n            GitHub\r\n          </a>\r\n        </p>\r\n        <p className='flex flex-no-wrap justify-center my-2 sm:my-0 w-full sm:w-1/2'>\r\n          Made with&nbsp;\r\n          <span title='Love' role='img' aria-label='Love'>\r\n            💗\r\n          </span>\r\n          &nbsp;using&nbsp;\r\n          <img\r\n            src='./react.svg'\r\n            alt='React'\r\n            title='React'\r\n            className='ml-1 w-5 h-5 object-contain object-center'></img>\r\n          &nbsp; by&nbsp;\r\n          <span title='Sai Nikhil' role='img' aria-label='Sai Nikhil'>\r\n            👨‍💻\r\n          </span>\r\n        </p>\r\n        <p className='my-2 sm:my-0 w-full sm:w-1/3'>\r\n          <Link\r\n            to='/privacy-policy'\r\n            className={`special-link z-0 hover:text-${theme}`}>\r\n            Privacy Policy\r\n          </Link>\r\n        </p>\r\n      </div>\r\n      <p className='mx-auto text-center text-sm'>\r\n        &copy; {moment().format('YYYY')}{' '}\r\n        <a\r\n          className={`special-link z-0 hover:text-${theme}`}\r\n          href='https://iamsainikhil.github.io'\r\n          target='_blank'\r\n          rel='noreferrer noopener'>\r\n          Sai Nikhil\r\n        </a>\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FooterComponent\r\n","import React, {useContext} from 'react'\r\nimport {Switch, Route} from 'react-router-dom'\r\nimport HomeContainer from './containers/home/HomeContainer'\r\nimport {ThemeContext} from './context/ThemeContext'\r\nimport PrivacyPolicyComponent from './components/privacy-policy/PrivacyPolicyComponent'\r\nimport HeaderComponent from './components/header/HeaderComponent'\r\nimport FooterComponent from './components/footer/FooterComponent'\r\n\r\nconst App = () => {\r\n  const {theme} = useContext(ThemeContext)\r\n  return (\r\n    <div className={` bg-${theme} tracking-wide border-box wrapper`}>\r\n      <div>\r\n        <HeaderComponent />\r\n      </div>\r\n      <div>\r\n        <Switch>\r\n          <Route path='/' exact component={HomeContainer}></Route>\r\n          <Route\r\n            path='/privacy-policy'\r\n            exact\r\n            component={PrivacyPolicyComponent}></Route>\r\n        </Switch>\r\n      </div>\r\n      <div>\r\n        <FooterComponent />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport './styles/main.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport {ThemeContextProvider} from './context/ThemeContext'\r\n\r\nconst app = (\r\n  <Router basename={process.env.PUBLIC_URL}>\r\n    <ThemeContextProvider>\r\n      <App />\r\n    </ThemeContextProvider>\r\n  </Router>\r\n)\r\n\r\nconst test = (\r\n  <div\r\n    className='bg-gray-100 border-t-4 border-teal-600 rounded-b\r\n        text-teal-900 px-4 py-3 shadow-md'\r\n    role='alert'>\r\n    <div className='flex'>\r\n      <div className='py-1'>\r\n        <svg\r\n          className='fill-current h-6 w-6 text-teal-500 mr-4'\r\n          xmlns='http://www.w3.org/2000/svg'\r\n          viewBox='0 0 20 20'>\r\n          <path d='M2.93 17.07A10 10 0 1 1 17.07 2.93 10 10 0 0 1 2.93 17.07zm12.73-1.41A8 8 0 1 0 4.34 4.34a8 8 0 0 0 11.32 11.32zM9 11V9h2v6H9v-4zm0-6h2v2H9V5z' />\r\n        </svg>\r\n      </div>\r\n      <div>\r\n        <p className='font-semibold'>\r\n          Weather Application development in progress...\r\n        </p>\r\n        <p className='text-sm'>The development setup is almost done.</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nReactDOM.render(test, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","import React, {useContext} from 'react'\r\nimport './LoaderStyle.scss'\r\nimport {ThemeContext} from '../../context/ThemeContext'\r\nimport {PropTypes} from 'prop-types'\r\n\r\nconst LoaderComponent = ({loaderText}) => {\r\n  const {theme} = useContext(ThemeContext)\r\n  return (\r\n    <div className='flex flex-col w-full justify-center items-center'>\r\n      <div className='spinner'>\r\n        <div className='double-bounce1'></div>\r\n        <div className='double-bounce2'></div>\r\n      </div>\r\n      {loaderText && (\r\n        <div\r\n          className={`mx-auto text-center text-sm font-light text-${\r\n            theme === 'light' ? 'dark' : 'light'\r\n          }`}>\r\n          {loaderText}\r\n          <span className='text-2xl text-fade'>...</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoaderComponent\r\n\r\nLoaderComponent.propTypes = {\r\n  loaderText: PropTypes.string\r\n}\r\n","import React, {Component} from 'react'\r\nimport axios from 'axios'\r\nimport axiosRetry from 'axios-retry'\r\nimport {PropTypes} from 'prop-types'\r\nimport {isEmpty, isUndefined} from 'lodash-es'\r\n\r\n// const token = process.env.REACT_APP_IPINFO_TOKEN\r\nconst AddressContext = React.createContext(null)\r\n\r\n// Exponential back-off retry delay between requests\r\naxiosRetry(axios, {retryDelay: axiosRetry.exponentialDelay})\r\n\r\nclass AddressContextProvider extends Component {\r\n  updateState = state => {\r\n    this.setState({...state})\r\n  }\r\n\r\n  updateFavorites = state => {\r\n    this.setState({...state})\r\n  }\r\n  state = {\r\n    address: {\r\n      cityName: '',\r\n      cityId: ''\r\n    },\r\n    urbanArea: {\r\n      name: '',\r\n      slug: '',\r\n      photos: []\r\n    },\r\n    latlong: '',\r\n    favorites: [],\r\n    updateState: this.updateState,\r\n    updateFavorites: this.updateFavorites\r\n  }\r\n\r\n  fetchAddressInfo = async () => {\r\n    const {data} = await axios.get('https://ipapi.co/json')\r\n\r\n    if (!isEmpty(data) && !isUndefined(data)) {\r\n      this.updateState({\r\n        address: {\r\n          cityName: `${data.city}, ${data.region}, ${data.country_name}`,\r\n          cityId: ''\r\n        },\r\n        latlong: `${data.latitude},${data.longitude}`\r\n      })\r\n    }\r\n  }\r\n\r\n  async getAddressInfo() {\r\n    try {\r\n      // use ipapi.co API instead of using browser's default geolocation API\r\n      // since cityName is important and cannot be fetched using browser geolocation API\r\n      this.fetchAddressInfo()\r\n\r\n      // fetch and store urban areas list in localStorage\r\n      if (!localStorage.getItem('urban-areas')) {\r\n        const urban_areas = await axios\r\n          .get(\r\n            'https://gist.githubusercontent.com/iamsainikhil/4959bbe458ebf0c4bcbf7e24b4983c89/raw/170221bcd3d9732fec97210b9a67cd445e437481/urban_areas.json'\r\n          )\r\n          .then(response => response.data)\r\n        localStorage.setItem('urban-areas', JSON.stringify(urban_areas))\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  getFavorites = () => {\r\n    if (localStorage.getItem('favorites')) {\r\n      this.setState({\r\n        favorites: [...JSON.parse(localStorage.getItem('favorites'))]\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAddressInfo()\r\n    // update favorites for the initial application load\r\n    this.getFavorites()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <AddressContext.Provider value={this.state}>\r\n        {this.props.children}\r\n      </AddressContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport {AddressContext, AddressContextProvider}\r\n\r\nAddressContext.propTypes = {\r\n  address: PropTypes.objectOf(PropTypes.string),\r\n  latlong: PropTypes.string\r\n}\r\n","import React, {useContext} from 'react'\r\nimport {ThemeContext} from '../../context/ThemeContext'\r\n\r\nconst ErrorComponent = props => {\r\n  const {theme} = useContext(ThemeContext)\r\n  return (\r\n    <div\r\n      className={`w-5/6 ml-auto mr-auto h-auto bg-${theme} border border-red-400 text-red-700 mt-5 px-4 py-2 rounded relative`}\r\n      role='alert'>\r\n      <span className='w-5/6 block break-words'>{props.errorMessage}</span>\r\n      {props.showCloseBtn && (\r\n        <span\r\n          className='absolute top-0 bottom-0 right-0 ml-3 mr-1 py-3'\r\n          onClick={props.closeError}>\r\n          <svg\r\n            className='fill-current h-6 w-6 text-red-500'\r\n            role='button'\r\n            xmlns='http://www.w3.org/2000/svg'\r\n            viewBox='0 0 20 20'>\r\n            <title>Close</title>\r\n            <path d='M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z' />\r\n          </svg>\r\n        </span>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorComponent\r\n","import React, {useState, useEffect} from 'react'\r\nconst WeatherUnitContext = React.createContext({\r\n  weatherUnit: 'F'\r\n})\r\n\r\nconst WeatherUnitContextProvider = ({children}) => {\r\n  const [weatherUnit, setWeatherUnit] = useState('F')\r\n\r\n  /**\r\n   * @param {String} unit (F | C)\r\n   * @param {String} type (selectUnit | toggle)\r\n   */\r\n  const updateWeatherUnit = unit => {\r\n    setWeatherUnit(unit)\r\n    localStorage.setItem('unit', JSON.stringify(unit))\r\n  }\r\n\r\n  useEffect(() => {\r\n    // store preferred temperature unit in localStorage\r\n    if (!localStorage.getItem('unit')) {\r\n      localStorage.setItem('unit', JSON.stringify('F'))\r\n    } else {\r\n      setWeatherUnit(JSON.parse(localStorage.getItem('unit')))\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  return (\r\n    <WeatherUnitContext.Provider value={{weatherUnit, updateWeatherUnit}}>\r\n      {children}\r\n    </WeatherUnitContext.Provider>\r\n  )\r\n}\r\n\r\nexport {WeatherUnitContext, WeatherUnitContextProvider}\r\n","import React, {Component} from 'react'\r\nimport ErrorComponent from '../../components/error/ErrorComponent'\r\n\r\nexport class ErrorBoundaryContainer extends Component {\r\n  state = {\r\n    hasError: false\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return {hasError: true}\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // You can also log the error to an error reporting service\r\n    console.log(error, errorInfo)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.hasError ? (\r\n          <ErrorComponent errorMessage={'Something went wrong.'} />\r\n        ) : (\r\n          this.props.children\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ErrorBoundaryContainer\r\n"],"sourceRoot":""}